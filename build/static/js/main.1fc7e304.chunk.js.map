{"version":3,"sources":["IntroVideo.js","Carousel.js","LandingPage.js","App.js","reportWebVitals.js","index.js"],"names":["IntroVideo","props","id","type","autoPlay","muted","playsInline","onEnded","e","target","play","localStorage","setItem","setReturned","src","Carousel","params","useState","picindex","setPicindex","start","setStart","end","setEnd","nextPic","alt","onClick","onTouchStart","targetTouches","clientX","onTouchMove","onTouchEnd","LandingPage","entered","setEntered","removeItem","window","location","reload","App","getItem","returned","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAeeA,MAdf,SAAoBC,GAChB,OACI,wBAAOC,GAAG,aAAaC,KAAK,YAAYC,UAAQ,EAACC,OAAK,EAACC,aAAW,EAClEC,QAAS,SAACC,GACFA,EAAEC,OAAOC,OACTC,aAAaC,QAAQ,WAAW,QAChCX,EAAMY,aAAY,IAJ1B,UAMI,wBAAQC,IAAI,qBAAqBX,KAAK,cAN1C,gC,MCgBOY,MAjBf,SAAkBC,GAAS,IAAD,EACUC,mBAAS,GADnB,mBACfC,EADe,KACLC,EADK,OAEIF,mBAAS,GAFb,mBAEfG,EAFe,KAERC,EAFQ,OAGDJ,mBAAS,GAHR,mBAGfK,EAHe,KAGXC,EAHW,KAKtB,SAASC,EAAQhB,GACbW,GAAaD,EAAS,GAFR,GAIlB,OACI,qBAAKhB,GAAG,WAAWY,IAAG,aAAQI,EAAR,QAAwBO,IAAI,gBAClDC,QAASF,EACTG,aAAc,SAACnB,GAAKa,EAASb,EAAEoB,cAAc,GAAGC,UAChDC,YAAa,SAACtB,GAAKe,EAAOf,EAAEoB,cAAc,GAAGC,UAC7CE,WAAY,SAACvB,GAAQc,EAAIF,EAAM,IAAII,QCM5BQ,MAlBf,WAAuB,IAAD,EACYf,oBAAS,GADrB,mBACXgB,EADW,KACFC,EADE,KAEd,OAAID,EAUA,cAAC,EAAD,IARA,qCACI,2CACA,wBAAQP,QAAS,SAAClB,GAAK0B,GAAW,IAAlC,mBACA,wBAAQR,QAAS,SAAClB,GAAKG,aAAawB,WAAW,YAAYC,OAAOC,SAASC,OAAO,MAAlF,kECMDC,MATf,WAAgB,IAAD,EACmBtB,mBAA4C,SAAnCN,aAAa6B,QAAQ,aADjD,mBACNC,EADM,KACI5B,EADJ,KAEb,OACE,qBAAK6B,UAAU,MAAf,SACID,EAAqD,cAAC,EAAD,IAA1C,cAAC,EAAD,CAAY5B,YAAaA,OCC7B8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1fc7e304.chunk.js","sourcesContent":["import \"./IntroVideo.css\"\r\nfunction IntroVideo(props){\r\n    return (\r\n        <video id=\"IntroVideo\" type=\"video/mp4\" autoPlay muted playsInline \r\n        onEnded={(e)=>{\r\n                e.target.play();\r\n                localStorage.setItem(\"returned\",\"true\")\r\n                props.setReturned(true)\r\n            }}>\r\n            <source src=\"./welcome-home.mp4\" type=\"video/mp4\"></source>\r\n            html5 video not supported\r\n        </video>\r\n    )\r\n}\r\n\r\nexport default IntroVideo","import {useState} from 'react'\r\nimport './Carousel.css'\r\nfunction Carousel(params) {\r\n    const [picindex, setPicindex] = useState(0);\r\n    const [start, setStart] = useState(0);\r\n    const [end,setEnd] = useState(0);\r\n    const PHOTO_COUNT=4\r\n    function nextPic(e){\r\n        setPicindex((picindex+1)%PHOTO_COUNT)\r\n    }\r\n    return (\r\n        <img id='carousel' src={`./p${picindex}.jpg`} alt=\"inside a room\" \r\n        onClick={nextPic}\r\n        onTouchStart={(e)=>{setStart(e.targetTouches[0].clientX)}} \r\n        onTouchMove={(e)=>{setEnd(e.targetTouches[0].clientX)}}\r\n        onTouchEnd={(e)=>{if(end-start>75) nextPic(e)}}></img>\r\n    )\r\n}\r\n\r\nexport default Carousel","import {useState} from 'react'\r\nimport Carousel from './Carousel'\r\n\r\nfunction LandingPage(){\r\n    const [entered, setEntered] = useState(false);\r\n        if(!entered){\r\n        return (\r\n            <>\r\n                <div>Welcome!</div>\r\n                <button onClick={(e)=>{setEntered(true)}}>Enter</button>\r\n                <button onClick={(e)=>{localStorage.removeItem(\"returned\");window.location.reload(\"/\")}}>假如人生只如初见</button>\r\n            </>\r\n        )\r\n    }else{\r\n        return (\r\n            <Carousel/>\r\n        )\r\n    }\r\n  \r\n}\r\n\r\nexport default LandingPage","import './App.css';\nimport {useState} from 'react'\nimport './IntroVideo'\nimport IntroVideo from './IntroVideo';\nimport LandingPage from './LandingPage';\n\n\nfunction App() {\n  const [returned, setReturned] = useState(localStorage.getItem(\"returned\")===\"true\")\n  return (\n    <div className=\"App\">\n      {!returned ? <IntroVideo setReturned={setReturned}/> : <LandingPage/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}